{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["PersonForm","newName","handleNewName","newNumber","handleNewNumber","addPerson","onSubmit","value","onChange","type","Filter","filter","handleFilter","Person","name","number","Persons","persons","handleDelete","map","person","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","success","className","text","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","pService","initialPersons","personsToShow","toLowerCase","includes","event","target","preventDefault","personObj","some","window","confirm","forEach","updated","p","catch","error","setTimeout","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b4ace85.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({newName, handleNewName, newNumber, handleNewNumber, addPerson}) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNewName} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNewNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilter}) => {\r\n    return <div>filter shown with <input value={filter} onChange={handleFilter} /></div>\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Person = ({name, number}) => {\r\n    return `${name} ${number} `\r\n}\r\n\r\nconst Persons = ({persons, handleDelete}) => {\r\n    return (<p>{persons.map(\r\n        person => <span key={person.name}><Person name={person.name} number={person.number} />\r\n        <button type='button' onClick={() => handleDelete(person.id)}>delete</button>\r\n        <br/></span>\r\n    )}</p>)\r\n}\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React, { useState, useEffect } from 'react';\r\nimport PersonForm from './components/PersonForm';\r\nimport Filter from './components/Filter';\r\nimport Persons from './components/Persons';\r\nimport pService from './services/persons'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    if (message.success) {\r\n        return (\r\n            <div className=\"success\">\r\n                {message.text}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"error\">\r\n                {message.text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons ] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ filter, setFilter ] = useState('')\r\n    const [ message, setMessage ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        pService.getAll().then(initialPersons => {\r\n            setPersons(initialPersons)\r\n        })\r\n    }, [])\r\n\r\n    const handleNewName = event => {\r\n        setNewName(event.target.value)\r\n    }\r\n    const handleNewNumber = event => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n    const handleFilter = event => {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    const personsToShow = persons.filter(\r\n        person => person.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n\r\n    const addPerson = event => {\r\n        event.preventDefault()\r\n        const personObj = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        if (persons.some(person => person.name === newName)) {\r\n            if (window.confirm(`${newName} is already added to phonebook. Replace the old number?`)) {\r\n                persons.forEach(person => {\r\n                    if (person.name === newName) {\r\n                        pService.update(person.id, personObj).then(updated => {\r\n                            setPersons(persons.map(p => p.id !== person.id ? p : updated))\r\n                        }).catch(error => {\r\n                            setMessage({text: error.response.data.error, success: false})\r\n                            setTimeout(() => setMessage(null), 5000)\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            pService.create(personObj).then(newPerson => {\r\n                setPersons(persons.concat(newPerson))\r\n                setMessage({text: `Added ${newName}`, success: true})\r\n            }).catch(error => {\r\n                setMessage({text: error.response.data.error, success: false})\r\n            })\r\n            setTimeout(() => setMessage(null), 5000)\r\n        }\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    const handleDelete = id => {\r\n        if (window.confirm('Delete?'))\r\n            pService.remove(id).then(() => setPersons(persons.filter(person => person.id !== id)))\r\n                .catch(error => {\r\n                    setMessage({text: 'Could not delete. Try again', success: false})\r\n                    setTimeout(() => setMessage(null), 5000)\r\n                })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Notification message={message} />\r\n            <h2>Phonebook</h2>\r\n            <Filter filter={filter} handleFilter={handleFilter} />\r\n            <h3>add a new</h3>\r\n            <PersonForm newName={newName} handleNewName={handleNewName} newNumber={newNumber}\r\n                        handleNewNumber={handleNewNumber} addPerson={addPerson} />\r\n            <h3>Numbers</h3>\r\n            <Persons persons={personsToShow} handleDelete={handleDelete} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}